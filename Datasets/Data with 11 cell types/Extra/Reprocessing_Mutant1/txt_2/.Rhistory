head(txtfiles)
head(X)
head(tmp)
tmp[,1]
head(tmp)
count<- as.vector(obj)
section[i]=count[i]
count[1]
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7], section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
input
str(input)
input(,1)
input[,1]
txtfiles = list.files(pattern="*.txt")  #loads in order
section=vector() #maybe initialize this as something else?
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
input
class(obj)
count<- as.vector(obj)
as.data.frame(count)->toFill
toFill->toFill[,i]
txtfiles = list.files(pattern="*.txt")  #loads in order
section=vector() #maybe initialize this as something else?
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
as.data.frame(count)->toFill
toFill->toFill[,i]
}
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/Extra/Reprocessing_Mutant1/txt_2")
library(gplots)
msz=100
cluster=4
txtfiles = list.files(pattern="*.txt")  #loads in order
section=vector() #maybe initialize this as something else?
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
as.data.frame(count)->toFill
toFill->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
toFill
mark=0
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
as.data.frame(count)->toFill
toFill->toFill[,i+mark]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
as.data.frame(count)->toFill
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
ead.table(txtfiles[1], sep="\t", head=T)->num
matrix(data=NA,nrow=length(num),ncol=33)->mat
as.data.frame(mat)->toFill
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
head(toFill)
read.table(txtfiles[1], sep="\t", head=T)->num
matrix(data=NA,nrow=length(num),ncol=33)->mat
as.data.frame(mat)->toFill
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
nrow(num)
nrow(tmp)
nrow(toFill)
nrow(mat)
matrix(data=NA,nrow=nrow(num),ncol=33)->mat
nrow(mat)
as.data.frame(mat)->toFill
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
nrow(count)
length(count)
matrix(data=NA,nrow=1000,ncol=33)->mat
as.data.frame(mat)->toFill
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
matrix(data=NA,nrow=10000,ncol=33)->mat
as.data.frame(mat)->toFill
for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
head(toFill)
summary(toFill)
View(toFill)
View(tmp)
View(mat)
View(toFill[1000:2000,])
toUse<-seq(2:33,4)
help(seq)
toUse<-seq(2,33,4)
toUse
toUse<-seq(2,33,4)
for(i in 1:toUse){
#for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
for(i in 1:levels(toUse)){
#for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
for(i in toUse)){
#for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
toUse<-seq(2,33,4)
for(i in toUse){
#for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
str(toFill)
colSums(toFill)
matrix(data=NA,nrow=10000,ncol=33)->mat
as.data.frame(mat)->toFill
toUse<-seq(2,33,4)
for(i in toUse){
#for(i in 1:length(txtfiles)){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
#We may not even need lines 145-148
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
count->toFill[,i]
#section[i]=count[i]
input<-cbind(count+i)
#results = data.frame(txtfiles, count)
input <- cbind(section[1], section[2], section[3], section[4], section[5], section[6], section[7],                  section[8], section[9], section[10], section[11],section[12], section[13], section[14], section[15], section[16], section[17], section[18], section[19],section[20], section[21], section[22], section[23],section[24], section[25], section[26], section[27], section[28], section[29], section[30], section[31], section[32], section[33])
}
colSums(toFill)
result<-toFill[,toUse]
colSums(result)
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/Extra/Reprocessing_Mutant1/txt_2")
library(gplots)
msz=100
cluster=4
txtfiles=list.files(pattern="*.txt")  #loads in order
mat=matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill=as.data.frame(mat)
toUse1<-seq(1,33,3)
toUse2<-seq(2,33,3)
toUse3<-seq(3,33,3)
inLoop=toFill
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result=toFill
result1<-toFill[,toUse1]
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/Extra/Reprocessing_Mutant1/txt_2")
library(gplots)
msz=100
cluster=4
txtfiles=list.files(pattern="*.txt")  #loads in order
mat=matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill=as.data.frame(mat)
toUse1<-seq(1,33,3)
toUse2<-seq(2,33,3)
toUse3<-seq(3,33,3)
inLoop=toFill
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
toFill
txtfiles=list.files(pattern="*.txt")  #loads in order
mat=matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill=as.data.frame(mat)
toUse1<-seq(1,33,3)
toUse2<-seq(2,33,3)
toUse3<-seq(3,33,3)
inLoop=toFill
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
toFill
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
msz=100
cluster=4
txtfiles=list.files(pattern="*.txt")  #loads in order
mat<-matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill<-as.data.frame(mat)
toUse0<-seq(1,33,1)
toUse1<-seq(1,33,3)
toUse2<-seq(2,33,3)
toUse3<-seq(3,33,3)
# define which vector to query here
inLoop<-toUse0
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result<-toFill[,inLoop]
head(result)
result->result0
result->result1
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result<-toFill[,inLoop]
result->result1
inLoop<-toUse2
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result<-toFill[,inLoop]
result->result2
# define which vector to query here
inLoop<-toUse3
for(i in inLoop){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result<-toFill[,inLoop]
result->result3
colSums(result0)
colSums(result1)
colSums(result2)
colSums(result3)
names(result)<-inLoop
result->result3
colSums(result3)
