obj22 <- my.xy22$counts
obj23 <- my.xy23$counts
obj24 <- my.xy24$counts
obj25 <- my.xy25$counts
obj26 <- my.xy26$counts
obj27 <- my.xy27$counts
obj28 <- my.xy28$counts
obj29 <- my.xy29$counts
obj30 <- my.xy30$counts
obj31 <- my.xy31$counts
obj32 <- my.xy32$counts
obj33 <- my.xy33$counts
#Removes points added in to make section square ( I added these points into the csv file myself)
obj1[1,1] = obj1[1,1]-1
obj1[100,1] = obj1[100,1]-1
obj1[1,100] = obj1[1,100]-1
obj1[100,100]=obj1[100,100]-1
obj2[1,1] = obj2[1,1]-1
obj2[100,1] = obj2[100,1]-1
obj2[1,100] = obj2[1,100]-1
obj2[100,100]=obj2[100,100]-1
obj3[1,1] = obj3[1,1]-1
obj3[100,1] = obj3[100,1]-1
obj3[1,100] = obj3[1,100]-1
obj3[100,100]=obj3[100,100]-1
obj4[1,1] = obj4[1,1]-1
obj4[100,1] = obj4[100,1]-1
obj4[1,100] = obj4[1,100]-1
obj4[100,100]=obj4[100,100]-1
obj5[1,1] = obj5[1,1]-1
obj5[100,1] = obj5[100,1]-1
obj5[1,100] = obj5[1,100]-1
obj5[100,100]=obj5[100,100]-1
obj6[1,1] = obj6[1,1]-1
obj6[100,1] = obj6[100,1]-1
obj6[1,100] = obj6[1,100]-1
obj6[100,100]=obj6[100,100]-1
obj7[1,1] = obj7[1,1]-1
obj7[100,1] = obj7[100,1]-1
obj7[1,100] = obj7[1,100]-1
obj7[100,100]=obj7[100,100]-1
obj8[1,1] = obj8[1,1]-1
obj8[100,1] = obj8[100,1]-1
obj8[1,100] = obj8[1,100]-1
obj8[100,100]=obj8[100,100]-1
obj9[1,1] = obj9[1,1]-1
obj9[100,1] = obj9[100,1]-1
obj9[1,100] = obj9[1,100]-1
obj9[100,100]=obj9[100,100]-1
obj10[1,1] = obj10[1,1]-1
obj10[100,1] = obj10[100,1]-1
obj10[1,100] = obj10[1,100]-1
obj10[100,100]=obj10[100,100]-1
obj11[1,1] = obj11[1,1]-1
obj11[100,1] = obj11[100,1]-1
obj11[1,100] = obj11[1,100]-1
obj11[100,100]=obj11[100,100]-1
obj12[1,1] = obj12[1,1]-1
obj12[100,1] = obj12[100,1]-1
obj12[1,100] = obj12[1,100]-1
obj12[100,100]=obj12[100,100]-1
obj13[1,1] = obj13[1,1]-1
obj13[100,1] = obj13[100,1]-1
obj13[1,100] = obj13[1,100]-1
obj13[100,100]=obj13[100,100]-1
obj14[1,1] = obj14[1,1]-1
obj14[100,1] = obj14[100,1]-1
obj14[1,100] = obj14[1,100]-1
obj14[100,100]=obj14[100,100]-1
obj15[1,1] = obj15[1,1]-1
obj15[100,1] = obj15[100,1]-1
obj15[1,100] = obj15[1,100]-1
obj15[100,100]=obj15[100,100]-1
obj16[1,1] = obj16[1,1]-1
obj16[100,1] = obj16[100,1]-1
obj16[1,100] = obj16[1,100]-1
obj16[100,100]=obj16[100,100]-1
obj17[1,1] = obj17[1,1]-1
obj17[100,1] = obj17[100,1]-1
obj17[1,100] = obj17[1,100]-1
obj17[100,100]=obj17[100,100]-1
obj18[1,1] = obj18[1,1]-1
obj18[100,1] = obj18[100,1]-1
obj18[1,100] = obj18[1,100]-1
obj18[100,100]=obj18[100,100]-1
obj19[1,1] = obj19[1,1]-1
obj19[100,1] = obj19[100,1]-1
obj19[1,100] = obj19[1,100]-1
obj19[100,100]=obj19[100,100]-1
obj20[1,1] = obj20[1,1]-1
obj20[100,1] = obj20[100,1]-1
obj20[1,100] = obj20[1,100]-1
obj20[100,100]=obj20[100,100]-1
obj21[1,1] = obj21[1,1]-1
obj21[100,1] = obj21[100,1]-1
obj21[1,100] = obj21[1,100]-1
obj21[100,100]=obj1[100,100]-1
obj22[1,1] = obj22[1,1]-1
obj22[100,1] = obj22[100,1]-1
obj22[1,100] = obj22[1,100]-1
obj22[100,100]=obj22[100,100]-1
obj23[1,1] = obj23[1,1]-1
obj23[100,1] = obj23[100,1]-1
obj23[1,100] = obj23[1,100]-1
obj23[100,100]=obj23[100,100]-1
obj24[1,1] = obj24[1,1]-1
obj24[100,1] = obj24[100,1]-1
obj24[1,100] = obj24[1,100]-1
obj24[100,100]=obj24[100,100]-1
obj25[1,1] = obj25[1,1]-1
obj25[100,1] = obj25[100,1]-1
obj25[1,100] = obj25[1,100]-1
obj25[100,100]=obj25[100,100]-1
obj26[1,1] = obj26[1,1]-1
obj26[100,1] = obj26[100,1]-1
obj26[1,100] = obj26[1,100]-1
obj26[100,100]=obj26[100,100]-1
obj27[1,1] = obj27[1,1]-1
obj27[100,1] = obj27[100,1]-1
obj27[1,100] = obj27[1,100]-1
obj27[100,100]=obj27[100,100]-1
obj28[1,1] = obj28[1,1]-1
obj28[100,1] = obj28[100,1]-1
obj28[1,100] = obj28[1,100]-1
obj28[100,100]=obj28[100,100]-1
obj29[1,1] = obj29[1,1]-1
obj29[100,1] = obj29[100,1]-1
obj29[1,100] = obj29[1,100]-1
obj29[100,100]=obj29[100,100]-1
obj30[1,1] = obj30[1,1]-1
obj30[100,1] = obj30[100,1]-1
obj30[1,100] = obj30[1,100]-1
obj30[100,100]=obj30[100,100]-1
obj31[1,1] = obj31[1,1]-1
obj31[100,1] = obj31[100,1]-1
obj31[1,100] = obj31[1,100]-1
obj31[100,100]=obj31[100,100]-1
obj32[1,1] = obj32[1,1]-1
obj32[100,1] = obj32[100,1]-1
obj32[1,100] = obj32[1,100]-1
obj32[100,100]=obj32[100,100]-1
obj33[1,1] = obj33[1,1]-1
obj33[100,1] = obj33[100,1]-1
obj33[1,100] = obj33[1,100]-1
obj33[100,100]=obj33[100,100]-1
# turn your species count matrices into vector; script won't work unless you do this
count1 <- as.vector(obj1)
count2 <- as.vector(obj2)
count3 <- as.vector(obj3)
count4 <- as.vector(obj4)
count5 <- as.vector(obj5)
count6 <- as.vector(obj6)
count7 <- as.vector(obj7)
count8 <- as.vector(obj8)
count9 <- as.vector(obj9)
count10 <- as.vector(obj10)
count11 <- as.vector(obj11)
count12 <- as.vector(obj12)
count13 <- as.vector(obj13)
count14 <- as.vector(obj14)
count15 <- as.vector(obj15)
count16 <- as.vector(obj16)
count17 <- as.vector(obj17)
count18 <- as.vector(obj18)
count19 <- as.vector(obj19)
count20 <- as.vector(obj20)
count21 <- as.vector(obj21)
count22 <- as.vector(obj22)
count23 <- as.vector(obj23)
count24 <- as.vector(obj24)
count25 <- as.vector(obj25)
count26 <- as.vector(obj26)
count27 <- as.vector(obj27)
count28 <- as.vector(obj28)
count29 <- as.vector(obj29)
count30 <- as.vector(obj30)
count31 <- as.vector(obj31)
count32 <- as.vector(obj32)
count33 <- as.vector(obj33)
# get coordinates for your species count matrices
rownumber <- rep(seq(1,nrow(obj1),by=1), times=ncol(obj1))
colnumber <- rep(1:ncol(obj1), each = nrow(obj1))
# turn coordinates and species counts into new matrix that can be input into vegan
input <- cbind(count1, count2, count3, count4, count5, count6, count7, count8, count9, count10, count11, count12, count13, count14, count15, count16, count17, count18, count19,count20, count21, count22, count23, count24, count25, count26, count27, count28, count29, count30, count31, count32, count33)
input1.1 <- cbind(count1, count4, count7, count10, count13, count16, count19, count22, count25, count28, count31)
input1.2 <- cbind(count2, count5, count8, count11, count14, count17, count20, count23, count26, count29, count32)
input1.3 <- cbind(count3, count6, count9, count12, count15, count18, count21, count24, count27, count30, count33)
library(gplots)
my.xy1.2<-hist2d(Count1.2$X,Count1.2$Y,nbins=c(100,100))
my.xy2.2<-hist2d(Count2$X,Count2$Y,nbins=c(100,100))
my.xy3.2<-hist2d(Count3.2$X,Count3.2$Y,nbins=c(100,100))
my.xy4.2<-hist2d(Count4.2$X,Count4.2$Y,nbins=c(100,100))
my.xy5.2<-hist2d(Count5.2$X,Count5.2$Y,nbins=c(100,100))
my.xy6.2<-hist2d(Count6.2$X,Count6.2$Y,nbins=c(100,100))
my.xy7.2<-hist2d(Count7.2$X,Count7.2$Y,nbins=c(100,100))
my.xy8.2<-hist2d(Count8.2$X,Count8.2$Y,nbins=c(100,100))
my.xy9.2<-hist2d(Count9.2$X,Count9.2$Y,nbins=c(100,100))
my.xy10.2<-hist2d(Count10.2$X,Count10.2$Y,nbins=c(100,100))
my.xy11.2<-hist2d(Count11.2$X,Count11.2$Y,nbins=c(100,100))
my.xy12.2<-hist2d(Count12.2$X,Count12.2$Y,nbins=c(100,100))
my.xy13.2<-hist2d(Count13.2$X,Count13.2$Y,nbins=c(100,100))
my.xy14.2<-hist2d(Count14.2$X,Count14.2$Y,nbins=c(100,100))
my.xy15.2<-hist2d(Count15.2$X,Count15.2$Y,nbins=c(100,100))
my.xy16.2<-hist2d(Count16.2$X,Count16.2$Y,nbins=c(100,100))
my.xy17.2<-hist2d(Count17.2$X,Count17.2$Y,nbins=c(100,100))
my.xy18.2<-hist2d(Count18.2$X,Count18.2$Y,nbins=c(100,100))
my.xy19.2<-hist2d(Count19.2$X,Count19.2$Y,nbins=c(100,100))
my.xy20.2<-hist2d(Count20.2$X,Count20.2$Y,nbins=c(100,100))
my.xy21.2<-hist2d(Count21.2$X,Count21.2$Y,nbins=c(100,100))
my.xy22.2<-hist2d(Count22.2$X,Count22.2$Y,nbins=c(100,100))
my.xy23.2<-hist2d(Count23.2$X,Count23.2$Y,nbins=c(100,100))
my.xy24.2<-hist2d(Count24.2$X,Count24.2$Y,nbins=c(100,100))
my.xy25.2<-hist2d(Count25.2$X,Count25.2$Y,nbins=c(100,100))
my.xy26.2<-hist2d(Count26.2$X,Count26.2$Y,nbins=c(100,100))
my.xy27.2<-hist2d(Count27.2$X,Count27.2$Y,nbins=c(100,100))
my.xy28.2<-hist2d(Count28.2$X,Count28.2$Y,nbins=c(100,100))
my.xy29.2<-hist2d(Count29.2$X,Count29.2$Y,nbins=c(100,100))
my.xy30.2<-hist2d(Count30.2$X,Count30.2$Y,nbins=c(100,100))
my.xy31.2<-hist2d(Count31.2$X,Count31.2$Y,nbins=c(100,100))
my.xy32.2<-hist2d(Count32.2$X,Count32.2$Y,nbins=c(100,100))
my.xy33.2<-hist2d(Count32.2$X,Count32.2$Y,nbins=c(100,100))
#assigns name to counts produced from hist2d
obj1.2 <- my.xy1.2$counts
obj2.2 <- my.xy2.2$counts
obj3.2 <- my.xy3.2$counts
obj4.2 <- my.xy4.2$counts
obj5.2 <- my.xy5.2$counts
obj6.2 <- my.xy6.2$counts
obj7.2 <- my.xy7.2$counts
obj8.2 <- my.xy8.2$counts
obj9.2 <- my.xy9.2$counts
obj10.2 <- my.xy10.2$counts
obj11.2 <- my.xy11.2$counts
obj12.2 <- my.xy12.2$counts
obj13.2 <- my.xy13.2$counts
obj14.2 <- my.xy14.2$counts
obj15.2 <- my.xy15.2$counts
obj16.2 <- my.xy16.2$counts
obj17.2 <- my.xy17.2$counts
obj18.2 <- my.xy18.2$counts
obj19.2 <- my.xy19.2$counts
obj20.2 <- my.xy20.2$counts
obj21.2 <- my.xy21.2$counts
obj22.2 <- my.xy22.2$counts
obj23.2 <- my.xy23.2$counts
obj24.2 <- my.xy24.2$counts
obj25.2 <- my.xy25.2$counts
obj26.2 <- my.xy26.2$counts
obj27.2 <- my.xy27.2$counts
obj28.2 <- my.xy28.2$counts
obj29.2 <- my.xy29.2$counts
obj30.2 <- my.xy30.2$counts
obj31.2 <- my.xy31.2$counts
obj32.2 <- my.xy32.2$counts
obj33.2 <- my.xy33.2$counts
#Removes points added in to make section square ( I added these points into the csv file myself)
obj1.2[1,1] = obj1.2[1,1]-1
obj1.2[100,1] = obj1.2[100,1]-1
obj1.2[1,100] = obj1.2[1,100]-1
obj1.2[100,100]=obj1.2[100,100]-1
obj2.2[1,1] = obj2.2[1,1]-1
obj2.2[100,1] = obj2.2[100,1]-1
obj2.2[1,100] = obj2.2[1,100]-1
obj2.2[100,100]=obj2.2[100,100]-1
obj3.2[1,1] = obj3.2[1,1]-1
obj3.2[100,1] = obj3.2[100,1]-1
obj3.2[1,100] = obj3.2[1,100]-1
obj3.2[100,100]=obj3.2[100,100]-1
obj4.2[1,1] = obj4.2[1,1]-1
obj4.2[100,1] = obj4.2[100,1]-1
obj4.2[1,100] = obj4.2[1,100]-1
obj4.2[100,100]=obj4.2[100,100]-1
obj5.2[1,1] = obj5.2[1,1]-1
obj5.2[100,1] = obj5.2[100,1]-1
obj5.2[1,100] = obj5.2[1,100]-1
obj5.2[100,100]=obj5.2[100,100]-1
obj6.2[1,1] = obj6.2[1,1]-1
obj6.2[100,1] = obj6.2[100,1]-1
obj6.2[1,100] = obj6.2[1,100]-1
obj6.2[100,100]=obj6.2[100,100]-1
obj7.2[1,1] = obj7.2[1,1]-1
obj7.2[100,1] = obj7.2[100,1]-1
obj7.2[1,100] = obj7.2[1,100]-1
obj7.2[100,100]=obj7.2[100,100]-1
obj8.2[1,1] = obj8.2[1,1]-1
obj8.2[100,1] = obj8.2[100,1]-1
obj8.2[1,100] = obj8.2[1,100]-1
obj8.2[100,100]=obj8.2[100,100]-1
obj9.2[1,1] = obj9.2[1,1]-1
obj9.2[100,1] = obj9.2[100,1]-1
obj9.2[1,100] = obj9.2[1,100]-1
obj9.2[100,100]=obj9.2[100,100]-1
obj10.2[1,1] = obj10.2[1,1]-1
obj10.2[100,1] = obj10.2[100,1]-1
obj10.2[1,100] = obj10.2[1,100]-1
obj10.2[100,100]=obj10.2[100,100]-1
obj11.2[1,1] = obj11.2[1,1]-1
obj11.2[100,1] = obj11.2[100,1]-1
obj11.2[1,100] = obj11.2[1,100]-1
obj11.2[100,100]=obj11.2[100,100]-1
obj12.2[1,1] = obj12.2[1,1]-1
obj12.2[100,1] = obj12.2[100,1]-1
obj12.2[1,100] = obj12.2[1,100]-1
obj12.2[100,100]=obj12.2[100,100]-1
obj13.2[1,1] = obj13.2[1,1]-1
obj13.2[100,1] = obj13.2[100,1]-1
obj13.2[1,100] = obj13.2[1,100]-1
obj13.2[100,100]=obj13.2[100,100]-1
obj14.2[1,1] = obj14.2[1,1]-1
obj14.2[100,1] = obj14.2[100,1]-1
obj14.2[1,100] = obj14.2[1,100]-1
obj14.2[100,100]=obj14.2[100,100]-1
obj15.2[1,1] = obj15.2[1,1]-1
obj15.2[100,1] = obj15.2[100,1]-1
obj15.2[1,100] = obj15.2[1,100]-1
obj15.2[100,100]=obj15.2[100,100]-1
obj16.2[1,1] = obj16.2[1,1]-1
obj16.2[100,1] = obj16.2[100,1]-1
obj16.2[1,100] = obj16.2[1,100]-1
obj16.2[100,100]=obj16.2[100,100]-1
obj17.2[1,1] = obj17.2[1,1]-1
obj17.2[100,1] = obj17.2[100,1]-1
obj17.2[1,100] = obj17.2[1,100]-1
obj17.2[100,100]=obj17.2[100,100]-1
obj18.2[1,1] = obj18.2[1,1]-1
obj18.2[100,1] = obj18.2[100,1]-1
obj18.2[1,100] = obj18.2[1,100]-1
obj18.2[100,100]=obj18.2[100,100]-1
obj19.2[1,1] = obj19.2[1,1]-1
obj19.2[100,1] = obj19.2[100,1]-1
obj19.2[1,100] = obj19.2[1,100]-1
obj19.2[100,100]=obj19.2[100,100]-1
obj20.2[1,1] = obj20.2[1,1]-1
obj20.2[100,1] = obj20.2[100,1]-1
obj20.2[1,100] = obj20.2[1,100]-1
obj20.2[100,100]=obj20.2[100,100]-1
obj21.2[1,1] = obj21.2[1,1]-1
obj21.2[100,1] = obj21.2[100,1]-1
obj21.2[1,100] = obj21.2[1,100]-1
obj21.2[100,100]=obj21.2[100,100]-1
obj22.2[1,1] = obj22.2[1,1]-1
obj22.2[100,1] = obj22.2[100,1]-1
obj22.2[1,100] = obj22.2[1,100]-1
obj22.2[100,100]=obj22.2[100,100]-1
obj23.2[1,1] = obj23.2[1,1]-1
obj23.2[100,1] = obj23.2[100,1]-1
obj23.2[1,100] = obj23.2[1,100]-1
obj23.2[100,100]=obj23.2[100,100]-1
obj24.2[1,1] = obj24.2[1,1]-1
obj24.2[100,1] = obj24.2[100,1]-1
obj24.2[1,100] = obj24.2[1,100]-1
obj24.2[100,100]=obj24.2[100,100]-1
obj25.2[1,1] = obj25.2[1,1]-1
obj25.2[100,1] = obj25.2[100,1]-1
obj25.2[1,100] = obj25.2[1,100]-1
obj25.2[100,100]=obj25.2[100,100]-1
obj26.2[1,1] = obj26.2[1,1]-1
obj26.2[100,1] = obj26.2[100,1]-1
obj26.2[1,100] = obj26.2[1,100]-1
obj26.2[100,100]=obj26.2[100,100]-1
obj27.2[1,1] = obj27.2[1,1]-1
obj27.2[100,1] = obj27.2[100,1]-1
obj27.2[1,100] = obj27.2[1,100]-1
obj27.2[100,100]=obj27.2[100,100]-1
obj28.2[1,1] = obj28.2[1,1]-1
obj28.2[100,1] = obj28.2[100,1]-1
obj28.2[1,100] = obj28.2[1,100]-1
obj28.2[100,100]=obj28.2[100,100]-1
obj29.2[1,1] = obj29.2[1,1]-1
obj29.2[100,1] = obj29.2[100,1]-1
obj29.2[1,100] = obj29.2[1,100]-1
obj29.2[100,100]=obj29.2[100,100]-1
obj30.2[1,1] = obj30.2[1,1]-1
obj30.2[100,1] = obj30.2[100,1]-1
obj30.2[1,100] = obj30.2[1,100]-1
obj30.2[100,100]=obj30.2[100,100]-1
obj31.2[1,1] = obj31.2[1,1]-1
obj31.2[100,1] = obj31.2[100,1]-1
obj31.2[1,100] = obj31.2[1,100]-1
obj31.2[100,100]=obj31.2[100,100]-1
obj32.2[1,1] = obj32.2[1,1]-1
obj32.2[100,1] = obj32.2[100,1]-1
obj32.2[1,100] = obj32.2[1,100]-1
obj32.2[100,100]=obj32.2[100,100]-1
obj33.2[1,1] = obj33.2[1,1]-1
obj33.2[100,1] = obj33.2[100,1]-1
obj33.2[1,100] = obj33.2[1,100]-1
obj33.2[100,100]=obj33.2[100,100]-1
# turn your species count matrices into vector; script won't work unless you do this
count1.2 <- as.vector(obj1.2)
count2.2 <- as.vector(obj2.2)
count3.2 <- as.vector(obj3.2)
count4.2 <- as.vector(obj4.2)
count5.2 <- as.vector(obj5.2)
count6.2 <- as.vector(obj6.2)
count7.2 <- as.vector(obj7.2)
count8.2 <- as.vector(obj8.2)
count9.2 <- as.vector(obj9.2)
count10.2 <- as.vector(obj10.2)
count11.2 <- as.vector(obj11.2)
count12.2 <- as.vector(obj12.2)
count13.2 <- as.vector(obj13.2)
count14.2 <- as.vector(obj14.2)
count15.2 <- as.vector(obj15.2)
count16.2 <- as.vector(obj16.2)
count17.2 <- as.vector(obj17.2)
count18.2 <- as.vector(obj18.2)
count19.2 <- as.vector(obj19.2)
count20.2 <- as.vector(obj20.2)
count21.2 <- as.vector(obj21.2)
count22.2 <- as.vector(obj22.2)
count23.2 <- as.vector(obj23.2)
count24.2 <- as.vector(obj24.2)
count25.2 <- as.vector(obj25.2)
count26.2 <- as.vector(obj26.2)
count27.2 <- as.vector(obj27.2)
count28.2 <- as.vector(obj28.2)
count29.2 <- as.vector(obj29.2)
count30.2 <- as.vector(obj30.2)
count31.2 <- as.vector(obj31.2)
count32.2 <- as.vector(obj32.2)
count33.2 <- as.vector(obj33.2)
# get coordinates for your species count matrices
rownumber2 <- rep(seq(1,nrow(obj1.2),by=1), times=ncol(obj1.2))
colnumber2 <- rep(1:ncol(obj1.2), each = nrow(obj1.2))
# turn coordinates and species counts into new matrix that can be input into vegan
input2 <- cbind(count1.2, count2.2, count3.2, count4.2, count5.2, count6.2, count7.2, count8.2, count9.2, count10.2, count11.2, count12.2, count13.2, count14.2, count15.2, count16.2, count17.2, count18.2, count19.2,count20.2, count21.2, count22.2, count23.2, count24.2, count25.2, count26.2, count27.2, count28.2, count29.2, count30.2, count31.2, count32.2, count33.2)
input2.1 <- cbind(count1.2, count4.2, count7.2, count10.2, count13.2, count16.2, count19.2, count22.2, count25.2, count28.2, count31.2)
input2.2 <- cbind(count2.2, count5.2, count8.2, count11.2, count14.2, count17.2, count20.2, count23.2, count26.2, count29.2, count32.2)
input2.3 <- cbind(count3.2, count6.2, count9.2, count12.2, count15.2, count18.2, count21.2, count24.2, count27.2, count30.2, count33.2)
spe<-input
spe1.1=input1.1
spe1.2=input1.2
spe1.3=input1.3
spe2=input2
spe2.1=input2.1
spe2.2=input2.2
spe2.3=input2.3
spe.kmeans <- kmeans(spe, centers=4, nstart=100)
spe.kmeans1.1 <- kmeans(spe1.1, centers=4, nstart=100)
spe.kmeans1.2 <- kmeans(spe1.2, centers=4, nstart=100)
spe.kmeans1.3 <- kmeans(spe1.3, centers=4, nstart=100)
spe.kmeans2 <- kmeans(spe2, centers=4, nstart=100)
spe.kmeans2.1 <- kmeans(spe2.1, centers=4, nstart=100)
spe.kmeans2.2 <- kmeans(spe2.2, centers=4, nstart=100)
spe.kmeans2.3 <- kmeans(spe2.3, centers=4, nstart=100)
write.table(spe.kmeans$cluster, file="spe.kmeans_Thymus1WT_K4_100.csv", sep=",")
write.table(spe.kmeans1.1$cluster, file="spe.kmeans_Thymus1WT_K4_100_Sec1.csv", sep=",")
write.table(spe.kmeans1.2$cluster, file="spe.kmeans_Thymus1WT_K4_100_Sec2.csv", sep=",")
write.table(spe.kmeans1.3$cluster, file="spe.kmeans_Thymus1WT_K4_100_Sec3.csv", sep=",")
write.table(spe.kmeans2$cluster, file="spe.kmeans2_Thymus1Mutant_K4_100.csv", sep=",")
write.table(spe.kmeans2.1$cluster, file="spe.kmeans2_Thymus1Mutant_K4_100_Sec1.csv", sep=",")
write.table(spe.kmeans2.2$cluster, file="spe.kmeans2_Thymus1Mutant_K4_100_Sec2.csv", sep=",")
write.table(spe.kmeans2.3$cluster, file="spe.kmeans2_Thymus1Mutant_K4_100_Sec3.csv", sep=",")
library(gplots)
spe_1=read.table("spe.kmeans_Thymus1WT_K4_100.csv", head=T, sep=",")
spe_1.1=read.table("spe.kmeans_Thymus1WT_K4_100_Sec1.csv", head=T, sep=",")
spe_1.2=read.table("spe.kmeans_Thymus1WT_K4_100_Sec2.csv", head=T, sep=",")
spe_1.3=read.table("spe.kmeans_Thymus1WT_K4_100_Sec3.csv", head=T, sep=",")
spe_2=read.table("spe.kmeans2_Thymus1Mutant_K4_100.csv", head=T, sep=",")
spe_2.1=read.table("spe.kmeans2_Thymus1Mutant_K4_100_Sec1.csv", head=T, sep=",")
spe_2.2=read.table("spe.kmeans2_Thymus1Mutant_K4_100_Sec2.csv", head=T, sep=",")
spe_2.3=read.table("spe.kmeans2_Thymus1Mutant_K4_100_Sec3.csv", head=T, sep=",")
spematrix=data.matrix(spe_1)
spematrix1.1=data.matrix(spe_1.1)
spematrix1.2=data.matrix(spe_1.2)
spematrix1.3=data.matrix(spe_1.3)
spematrix2=data.matrix(spe_2)
spematrix2.1=data.matrix(spe_2.1)
spematrix2.2=data.matrix(spe_2.2)
spematrix2.3=data.matrix(spe_2.3)
matrix = matrix(spematrix, nrow = 100, ncol=100)
matrix1.1 = matrix(spematrix1.1, nrow = 100, ncol=100)
matrix1.2 = matrix(spematrix1.2, nrow = 100, ncol=100)
matrix1.3 = matrix(spematrix1.3, nrow = 100, ncol=100)
matrix2 = matrix(spematrix2, nrow = 100, ncol=100)
matrix2.1 = matrix(spematrix2.1, nrow = 100, ncol=100)
matrix2.2 = matrix(spematrix2.2, nrow = 100, ncol=100)
matrix2.3 = matrix(spematrix2.3, nrow = 100, ncol=100)
df<-spe[which(spe.kmeans$cluster==1),] %>% colSums() %>% t()
for (j in 1:4){
tmp<-spe[which(spe.kmeans$cluster==j),] %>% colSums() %>% t()
df<-rbind(df,tmp)
}
library(vegan) # you may need to install this if you don't have it
library(dplyr) # ditto (used for chaining and manipulation)
df<-spe[which(spe.kmeans$cluster==1),] %>% colSums() %>% t()
for (j in 1:4){
tmp<-spe[which(spe.kmeans$cluster==j),] %>% colSums() %>% t()
df<-rbind(df,tmp)
}
install.packages("dplyr")
df<-spe[which(spe.kmeans$cluster==1),] %>% colSums() %>% t()
for (j in 1:4){
tmp<-spe[which(spe.kmeans$cluster==j),] %>% colSums() %>% t()
df<-rbind(df,tmp)
}
install.packages("dplyr")
library(dplyr) # ditto (used for chaining and manipulation)
install.packages("Lahman")
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans$cluster)){
barplot(colSums(spe[which(spe.kmeans$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans1.1$cluster)){
barplot(colSums(spe1.1[which(spe.kmeans1.1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
