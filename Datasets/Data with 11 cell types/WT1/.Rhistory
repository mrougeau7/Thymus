Count28<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/PDGFRb_1.txt",header=T,sep="\t",fill=TRUE)
Count29<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/PDGFRb_2.txt",header=T,sep="\t",fill=TRUE)
Count30<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/PDGFRb_3.txt",header=T,sep="\t",fill=TRUE)
Count31<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/UEA1_1.txt",header=T,sep="\t",fill=TRUE)
Count32<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/UEA1_2.txt",header=T,sep="\t",fill=TRUE)
Count33<-read.table("~/Dropbox/R scripts/Datasets/Data with 11 cell types/WT1/UEA1_3.txt",header=T,sep="\t",fill=TRUE)
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/Extra/Reprocessing_Mutant1/txt_2")
library(gplots)
msz=100  #matrix size in hist2d
cluster=4  #number of clusters produced for K means
txtfiles=list.files(pattern="*.txt")  #loads in order all files within folder
mat<-matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill<-as.data.frame(mat)  #changes to data frame
toUse0<-seq(1,33,1) #uses all 33 columns
toUse1<-seq(1,33,3) #uses columns that correspond to Section1
toUse2<-seq(2,33,3) #Section2
toUse3<-seq(3,33,3) #Section3
for(i in toUse0){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
for(i in toUse1){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
for(i in toUse2){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
for(i in toUse3){
tmp = read.table(txtfiles[i], sep="\t", head=T)
X=tmp[[1]]  #[,1]
Y=tmp[[2]]
my.xy<-hist2d(X,Y,nbins=c(msz,msz))
obj <- my.xy$counts
obj[1,1] = obj[1,1]-1
obj[100,1] = obj[100,1]-1
obj[1,100] = obj[1,100]-1
obj[100,100]=obj[100,100]-1
count<- as.vector(obj)
toFill[,i]<-count
}
result<-toFill[,toUse0]
result1<-toFill[,toUse1]
result2<-toFill[,toUse2]
result3<-toFill[,toUse3]
library (vegan)
library(labdsv)
spe.kmeans_Mutant1_All <- kmeans(result0, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S1 <- kmeans(result1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S2 <- kmeans(result2, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S3 <- kmeans(result3, centers=cluster, nstart=10)
result0<-toFill[,toUse0]
spe.kmeans_Mutant1_All <- kmeans(result0, centers=cluster, nstart=10)
library(gplots) ###Call 1 set at a time; produces image of section
v1 <- spe.kmeans_Mutant1_S1$cluster  #change this to section you are interested in looking at
#load("thymus.Rdata")
#image(v2) # make pic
v2 = matrix(v1, nrow = 100, ncol=100)
v2<-v2[1:40,1:100] # trim
image(v2) # make new pic
heatmap.2( v2, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("green", "yellow", "blue", "red"))
clust.ext<-v2[1,1] # get cluster number of corner pixel (should always represent 'exterior')
idx<-which(v2==clust.ext,arr.ind=T) # get addresses of all pixels of that number
#mat[mat < 0.1] <- NA
idx2<-which(idx[,1]<40) # find such pixels for which there is another pixel immediately to right
idx<-idx[idx2,] # use only those pixels
idx[,1]<-idx[,1]+1 # find pixels immediately to right
z<-table(v2[idx]) # make sorted table of cluster numbers of these pixels
clust.int<-as.integer(which(z==max(z[z!=max(z)]))) # get the cluster number that is 2nd most common (this is the thing most often 'touching' exterior, i.e. interior but not medular)
#mat[mat < 0.1] <- NA
clust.med1<-as.integer(which(z==min(z[z!=min(z)])))
clust.med2<-as.integer(which(z==min(z)))
idx.med1<-which(v2==clust.med1)
idx.med2<-which(v2==clust.med2)
clust.ext
idx
idx2
clust.int
idx<-which(v2==clust.ext,arr.ind=T) # get addresses of all pixels of that number
idx
z
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/WT2")
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/WT2")
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/WT1")
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/Mutant2")
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/WT1")
library(gplots)
msz=100  #matrix size in hist2d
cluster=4  #number of clusters produced for K means
txtfiles_WT1=list.files(pattern="*.txt")  #loads in order all files within folder
mat_WT1<-matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_WT1<-as.data.frame(mat_Wt1)  #changes to data frame
toFill_WT1<-as.data.frame(mat_WT1)  #changes to data frame
toUse0_WT1<-seq(1,33,1) #uses all 33 columns
toUse1_WT1<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_WT1<-seq(2,33,3) #Section2
toUse3_WT1<-seq(3,33,3) #Section3
for(i in toUse0_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz_WT1,msz_WT1))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse0_WT1]
result_WT1->result0_WT1
}
for(i in toUse0_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse0_WT1]
result_WT1->result0_WT1
}
for(i in toUse1_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse1_WT1]
result_WT1->result1_WT1
}
for(i in toUse2_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse2_WT1]
result_WT1->result2_WT1
}
for(i in toUse3_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill[,toUse3_Wt1]
result_Wt1->result3_WT1   ###Section3
}
for(i in toUse3_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse3_Wt1]
result_Wt1->result3_WT1   ###Section3
}
for(i in toUse3_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse3_WT1]
result_WT1->result3_WT1   ###Section3
}
library (vegan)
library(labdsv)
spe.kmeans_Mutant1_All_WT1 <- kmeans(result0_WT1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S1_Wt1 <- kmeans(result1_Wt1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S2_WT1 <- kmeans(result2_WT1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S3_WT1 <- kmeans(result3_WT1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S1_WT1 <- kmeans(result1_Wt1, centers=cluster, nstart=10)
spe.kmeans_Mutant1_S1_WT1 <- kmeans(result1_WT1, centers=cluster, nstart=10)
library(gplots) ###Call 1 set at a time; produces image of section
v1_WT1 <- spe.kmeans_Mutant1_S1_WT1$cluster  #change this to section you are interested in looking at
heatmap.2( v1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("green", "yellow", "blue", "red"))
v2_WT1 = matrix(v1_Wt1, nrow = 100, ncol=100)
v2_WT1 = matrix(v1_WT1, nrow = 100, ncol=100)
heatmap.2( v2_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("green", "yellow", "blue", "red"))
heatmap.2( v2_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v0.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
v0.1_WT1=matrix(v0_WT1,nrow=100,ncol=100)
v1.1_WT1=matrix(v1_WT1,nrow=100,ncol=100)
v2.1_WT1=matrix(v2_WT1,nrow=100,ncol=100)
v3.1_WT1=matrix(v3_WT1,nrow=100,ncol=100)
v1_WT1=spe.kmeans_Mutant1_S1_WT1$cluster  #change this to section you are interested in looking at
v2_WT1=spe.kmeans_Mutant1_S2_WT1$cluster
v3_WT1=spe.kmeans_Mutant1_S3_WT1$cluster
v0_WT1=spe.kmeans_Mutant1_All_WT1$cluster
v1_WT1=spe.kmeans_Mutant1_S1_WT1$cluster  #change this to section you are interested in looking at
v2_WT1=spe.kmeans_Mutant1_S2_WT1$cluster
v3_WT1=spe.kmeans_Mutant1_S3_WT1$cluster
v0.1_WT1=matrix(v0_WT1,nrow=100,ncol=100)
v1.1_WT1=matrix(v1_WT1,nrow=100,ncol=100)
v2.1_WT1=matrix(v2_WT1,nrow=100,ncol=100)
v3.1_WT1=matrix(v3_WT1,nrow=100,ncol=100)
heatmap.2( v0.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v0.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_Mutant1_All$cluster)){
barplot(colSums(result0[which(spe.kmeans_Mutant1_All1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
setwd("~/GitHub/Thymus/Datasets/Data with 11 cell types/WT1")
library(gplots)
msz=100  #matrix size in hist2d
cluster=4  #number of clusters produced for K means
txtfiles_WT1=list.files(pattern="*.txt")  #loads in order all files within folder
mat_WT1<-matrix(data=NA,nrow=10000,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_WT1<-as.data.frame(mat_WT1)  #changes to data frame
toUse0_WT1<-seq(1,33,1) #uses all 33 columns
toUse1_WT1<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_WT1<-seq(2,33,3) #Section2
toUse3_WT1<-seq(3,33,3) #Section3
for(i in toUse0_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse0_WT1]
result_WT1->result0_WT1
}
for(i in toUse1_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse1_WT1]
result_WT1->result1_WT1
}
for(i in toUse2_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse2_WT1]
result_WT1->result2_WT1
}
for(i in toUse3_WT1){
tmp_WT1 = read.table(txtfiles_WT1[i], sep="\t", head=T)
X_WT1=tmp_WT1[[1]]  #[,1]
Y_WT1=tmp_WT1[[2]]
my.xy_WT1<-hist2d(X_WT1,Y_WT1,nbins=c(msz,msz))
obj_WT1 <- my.xy_WT1$counts
obj_WT1[1,1] = obj_WT1[1,1]-1
obj_WT1[100,1] = obj_WT1[100,1]-1
obj_WT1[1,100] = obj_WT1[1,100]-1
obj_WT1[100,100]=obj_WT1[100,100]-1
count_WT1<- as.vector(obj_WT1)
toFill_WT1[,i]<-count_WT1
result_WT1<-toFill_WT1[,toUse3_WT1]
result_WT1->result3_WT1   ###Section3
}
library (vegan)
library(labdsv)
spe.kmeans_All_WT1 <- kmeans(result0_WT1, centers=cluster, nstart=10)
spe.kmeans_S1_WT1 <- kmeans(result1_WT1, centers=cluster, nstart=10)
spe.kmeans_S2_WT1 <- kmeans(result2_WT1, centers=cluster, nstart=10)
spe.kmeans_S3_WT1 <- kmeans(result3_WT1, centers=cluster, nstart=10)
v0_WT1=spe.kmeans_All_WT1$cluster
v1_WT1=spe.kmeans_S1_WT1$cluster  #change this to section you are interested in looking at
v2_WT1=spe.kmeans_S2_WT1$cluster
v3_WT1=spe.kmeans_S3_WT1$cluster
#load("thymus.Rdata")
#image(v2) # make pic
v0.1_WT1=matrix(v0_WT1,nrow=100,ncol=100)
v1.1_WT1=matrix(v1_WT1,nrow=100,ncol=100)
v2.1_WT1=matrix(v2_WT1,nrow=100,ncol=100)
v3.1_WT1=matrix(v3_WT1,nrow=100,ncol=100)
heatmap.2( v0.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v1.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_WT1, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_WT1,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_WT1$cluster)){
barplot(colSums(result0[which(spe.kmeans_All1_WT1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_WT1$cluster)){
barplot(colSums(result0_WT1[which(spe.kmeans_All1_WT1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_WT1$cluster)){
barplot(colSums(result0_WT1[which(spe.kmeans_All_WT1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_WT1$cluster)){
barplot(colSums(result1_WT1[which(spe.kmeans_S1_WT1$cluster==i),]),main=i,ylim=c(0,12000))
we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_WT1$cluster)){
barplot(colSums(result1_WT1[which(spe.kmeans_S1_WT1$cluster==i),]),main=i,ylim=c(0,12000))
#we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S2_WT1$cluster)){
barplot(colSums(result2_WT1[which(spe.kmeans_S2_WT1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_WT1$cluster)){
barplot(colSums(result3_WT1[which(spe.kmeans_S3_WT1$cluster==i),]),main=i,ylim=c(0,12000))
we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_WT1$cluster)){
barplot(colSums(result3_WT1[which(spe.kmeans_S3_WT1$cluster==i),]),main=i,ylim=c(0,12000))
# we pick out desired cluster and plot
}
b2_WT1<-colSums(result0[which(spe.kmeans_All_WT1$cluster==2),])
b3_WT1<-colSums(result0[which(spe.kmeans_All_WT1$cluster==3),])
b4_WT1<-colSums(result0[which(spe.kmeans_All_WT1$cluster==4),])
b2_S1_WT1<-colSums(result1[which(spe.kmeans_S1_WT1$cluster==2),])
b3_S1_WT1<-colSums(result1[which(spe.kmeans_S1_WT1$cluster==3),])
b4_S1_WT1<-colSums(result1[which(spe.kmeans_S1_WT1$cluster==4),])
b2_S2_WT1<-colSums(result2[which(spe.kmeans_S2_WT1$cluster==2),])
b3_S2_WT1<-colSums(result2[which(spe.kmeans_S2_WT1$cluster==3),])
b4_S2_WT1<-colSums(result2[which(spe.kmeans_S2_WT1$cluster==4),])
b2_S3_WT1<-colSums(result3[which(spe.kmeans_S3_WT1$cluster==2),])
b3_S3_WT1<-colSums(result3[which(spe.kmeans_S3_WT1$cluster==3),])
b4_S3_WT1<-colSums(result3[which(spe.kmeans_S3_WT1$cluster==4),])
b2_WT1<-colSums(result0_WT1[which(spe.kmeans_All_WT1$cluster==2),])
b3_WT1<-colSums(result0_WT1[which(spe.kmeans_All_WT1$cluster==3),])
b4_WT1<-colSums(result0_WT1[which(spe.kmeans_All_WT1$cluster==4),])
b2_S1_WT1<-colSums(result1_WT1[which(spe.kmeans_S1_WT1$cluster==2),])
b3_S1_WT1<-colSums(result1_WT1[which(spe.kmeans_S1_WT1$cluster==3),])
b4_S1_WT1<-colSums(result1_WT1[which(spe.kmeans_S1_WT1$cluster==4),])
b2_S2_WT1<-colSums(result2_WT1[which(spe.kmeans_S2_WT1$cluster==2),])
b3_S2_WT1<-colSums(result2_WT1[which(spe.kmeans_S2_WT1$cluster==3),])
b4_S2_WT1<-colSums(result2_WT1[which(spe.kmeans_S2_WT1$cluster==4),])
b2_S3_WT1<-colSums(result3_WT1[which(spe.kmeans_S3_WT1$cluster==2),])
b3_S3_WT1<-colSums(result3_WT1[which(spe.kmeans_S3_WT1$cluster==3),])
b4_S3_WT1<-colSums(result3_WT1[which(spe.kmeans_S3_WT1$cluster==4),])
b2_WT1<-b2_WT1/sum(b2_WT1)
b3_WT1<-b3_WT1/sum(b3_WT1)
b4_WT1<-b4_WT1/sum(b4_WT1)
b2_S1_WT1<-b2_S1_WT1/sum(b2_S1_WT1)
b3_S1_WT1<-b3_S1_WT1/sum(b3_S1_WT1)
b4_S1_WT1<-b4_S1_WT1/sum(b4_S1_WT1)
b2_S2_WT1<-b2_S2_WT1/sum(b2_S2_WT1)
b3_S2_WT1<-b3_S2_WT1/sum(b3_S2_WT1)
b4_S2_WT1<-b4_S2_WT1/sum(b4_S2_WT1)
b2_S3_WT1<-b2_S3_WT1/sum(b2_S3_WT1)
b3_S3_WT1<-b3_S3_WT1/sum(b3_S3_WT1)
b4_S3_WT1<-b4_S3_WT1/sum(b4_S3_WT1)
par(mfrow=c(2,2))  ##All
barplot(b2_WT1-b3_WT1,main="2-3")
barplot(b2_WT1-b4_WT1,main="2-4")
barplot(b3_WT1-b4_WT1,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S1_WT1-b3_S1_WT1,main="2-3")
barplot(b2_S1_WT1-b4_S1_WT1,main="2-4")
barplot(b3_S1_WT1-b4_S1_WT1,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S2_WT1-b3_S2_WT2,main="2-3")
barplot(b2_S2_WT1-b4_S2_WT2,main="2-4")
barplot(b3_S2_WT1-b4_S2_WT2,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S3_WT1-b3_S3_WT1,main="2-3")
barplot(b2_S3_WT1-b4_S3_WT1,main="2-4")
barplot(b3_S3_WT1-b4_S3_WT1,main="3-4")
par(mfrow=c(2,2))  ##All
barplot(b2_WT1-b3_WT1,main="2-3")
barplot(b2_WT1-b4_WT1,main="2-4")
barplot(b3_WT1-b4_WT1,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S1_WT1-b3_S1_WT1,main="2-3")
barplot(b2_S1_WT1-b4_S1_WT1,main="2-4")
barplot(b3_S1_WT1-b4_S1_WT1,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S2_WT1-b3_S2_WT1,main="2-3")
barplot(b2_S2_WT1-b4_S2_WT1,main="2-4")
barplot(b3_S2_WT1-b4_S2_WT1,main="3-4")
par(mfrow=c(2,2))
barplot(b2_S3_WT1-b3_S3_WT1,main="2-3")
barplot(b2_S3_WT1-b4_S3_WT1,main="2-4")
barplot(b3_S3_WT1-b4_S3_WT1,main="3-4")
library(vegan)
library(dplyr)
install.packages("C:/Users/Mary/Downloads/dplyr_0.4.1.zip", repos = NULL)
library("dplyr", lib.loc="~/R/win-library/2.15")
library(dplyr) # used for chaining and manipulation
install.packages("C:/Users/Mary/Downloads/dplyr_0.4.1 (1).zip", repos = NULL)
install.packages("C:/Users/Mary/Downloads/dplyr_0.4.1.tar.gz", repos = NULL, type = "source")
install.packages('dplyr', repos='http://cran.rstudio.com/')
