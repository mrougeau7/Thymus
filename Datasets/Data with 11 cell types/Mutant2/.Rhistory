median(c(27, 71, 25, 25, 36))
setwd("~/Thymus/Datasets/Data with 11 cell types/Mutant2")
library(gplots)
mat_Mutant2<-matrix(data=NA,nrow=22500,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_Mutant2<-as.data.frame(mat_Mutant2)  #changes to data frame
toUse0_Mutant2<-seq(1,33,1) #uses all 33 columns
toUse1_Mutant2<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_Mutant2<-seq(2,33,3) #Section2
toUse3_Mutant2<-seq(3,33,3) #Section3
for(i in toUse0_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse0_Mutant2]
result_Mutant2->result0_Mutant2
}
for(i in toUse1_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse1_Mutant2]
result_Mutant2->result1_Mutant2
}
for(i in toUse2_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse2_Mutant2]
result_Mutant2->result2_Mutant2
}
for(i in toUse3_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse3_Mutant2]
result_Mutant2->result3_Mutant2   ###Section3
}
library (vegan)
library(labdsv)
# This step normalizes your data and is optional.
mat_Mutant2<-matrix(data=NA,nrow=22500,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_Mutant2<-as.data.frame(mat_Mutant2)  #changes to data frame
toUse0_Mutant2<-seq(1,33,1) #uses all 33 columns
toUse1_Mutant2<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_Mutant2<-seq(2,33,3) #Section2
toUse3_Mutant2<-seq(3,33,3) #Section3
for(i in toUse0_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse0_Mutant2]
result_Mutant2->result0_Mutant2
}
for(i in toUse1_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse1_Mutant2]
result_Mutant2->result1_Mutant2
}
for(i in toUse2_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse2_Mutant2]
result_Mutant2->result2_Mutant2
}
for(i in toUse3_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse3_Mutant2]
result_Mutant2->result3_Mutant2   ###Section3
}
library (vegan)
library(labdsv)
# This step normalizes your data and is optional.
library(gplots)
msz=150  #matrix size in hist2d
cluster=4  #number of clusters produced for K means
txtfiles_Mutant2=list.files(pattern="*.txt")  #loads in order all files within folder
mat_Mutant2<-matrix(data=NA,nrow=22500,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_Mutant2<-as.data.frame(mat_Mutant2)  #changes to data frame
toUse0_Mutant2<-seq(1,33,1) #uses all 33 columns
toUse1_Mutant2<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_Mutant2<-seq(2,33,3) #Section2
toUse3_Mutant2<-seq(3,33,3) #Section3
for(i in toUse0_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse0_Mutant2]
result_Mutant2->result0_Mutant2
}
for(i in toUse1_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse1_Mutant2]
result_Mutant2->result1_Mutant2
}
for(i in toUse2_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse2_Mutant2]
result_Mutant2->result2_Mutant2
}
for(i in toUse3_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse3_Mutant2]
result_Mutant2->result3_Mutant2   ###Section3
}
library (vegan)
library(labdsv)
spe.kmeans_All_Mutant2 <- kmeans(result0_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S1_Mutant2 <- kmeans(result1_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S2_Mutant2 <- kmeans(result2_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S3_Mutant2 <- kmeans(result3_Mutant2, centers=cluster, nstart=1000)
library(gplots) ###Call 1 set at a time; produces image of section
v0_Mutant2=spe.kmeans_All_Mutant2$cluster
v1_Mutant2=spe.kmeans_S1_Mutant2$cluster
v2_Mutant2=spe.kmeans_S2_Mutant2$cluster
v3_Mutant2=spe.kmeans_S3_Mutant2$cluster
#load("thymus.Rdata")
#image(v2) # make pic
v0.1_Mutant2=matrix(v0_Mutant2,nrow=150,ncol=150)
v1.1_Mutant2=matrix(v1_Mutant2,nrow=150,ncol=150)
v2.1_Mutant2=matrix(v2_Mutant2,nrow=150,ncol=150)
v3.1_Mutant2=matrix(v3_Mutant2,nrow=150,ncol=150)
heatmap.2( v1.1_Mutant2, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_Mutant2,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
b1_Mutant2<-colSums(result0_Mutant2[which(spe.kmeans_All_Mutant2$cluster==1),])
b2_Mutant2<-colSums(result0_Mutant2[which(spe.kmeans_All_Mutant2$cluster==2),])
b3_Mutant2<-colSums(result0_Mutant2[which(spe.kmeans_All_Mutant2$cluster==3),])
b4_Mutant2<-colSums(result0_Mutant2[which(spe.kmeans_All_Mutant2$cluster==4),])
b1_S1_Mutant2<-colSums(result1_Mutant2[which(spe.kmeans_S1_Mutant2$cluster==1),])
b2_S1_Mutant2<-colSums(result1_Mutant2[which(spe.kmeans_S1_Mutant2$cluster==2),])
b3_S1_Mutant2<-colSums(result1_Mutant2[which(spe.kmeans_S1_Mutant2$cluster==3),])
b4_S1_Mutant2<-colSums(result1_Mutant2[which(spe.kmeans_S1_Mutant2$cluster==4),])
b1_S2_Mutant2<-colSums(result2_Mutant2[which(spe.kmeans_S2_Mutant2$cluster==1),])
b2_S2_Mutant2<-colSums(result2_Mutant2[which(spe.kmeans_S2_Mutant2$cluster==2),])
b3_S2_Mutant2<-colSums(result2_Mutant2[which(spe.kmeans_S2_Mutant2$cluster==3),])
b4_S2_Mutant2<-colSums(result2_Mutant2[which(spe.kmeans_S2_Mutant2$cluster==4),])
b1_S3_Mutant2<-colSums(result3_Mutant2[which(spe.kmeans_S3_Mutant2$cluster==1),])
b2_S3_Mutant2<-colSums(result3_Mutant2[which(spe.kmeans_S3_Mutant2$cluster==2),])
b3_S3_Mutant2<-colSums(result3_Mutant2[which(spe.kmeans_S3_Mutant2$cluster==3),])
b4_S3_Mutant2<-colSums(result3_Mutant2[which(spe.kmeans_S3_Mutant2$cluster==4),])
###and normalize these so that each cluster type has the same total amount of cells (in other words, we're ###getting the proportion of cell types in each cluster)
b1_Mutant2<-b1_Mutant2/sum(b1_Mutant2)
b2_Mutant2<-b2_Mutant2/sum(b2_Mutant2)
b3_Mutant2<-b3_Mutant2/sum(b3_Mutant2)
b4_Mutant2<-b4_Mutant2/sum(b4_Mutant2)
b1_S1_Mutant2<-b1_S1_Mutant2/sum(b1_S1_Mutant2)
b2_S1_Mutant2<-b2_S1_Mutant2/sum(b2_S1_Mutant2)
b3_S1_Mutant2<-b3_S1_Mutant2/sum(b3_S1_Mutant2)
b4_S1_Mutant2<-b4_S1_Mutant2/sum(b4_S1_Mutant2)
b1_S2_Mutant2<-b1_S2_Mutant2/sum(b1_S2_Mutant2)
b2_S2_Mutant2<-b2_S2_Mutant2/sum(b2_S2_Mutant2)
b3_S2_Mutant2<-b3_S2_Mutant2/sum(b3_S2_Mutant2)
b4_S2_Mutant2<-b4_S2_Mutant2/sum(b4_S2_Mutant2)
b1_S3_Mutant2<-b1_S3_Mutant2/sum(b1_S3_Mutant2)
b2_S3_Mutant2<-b2_S3_Mutant2/sum(b2_S3_Mutant2)
b3_S3_Mutant2<-b3_S3_Mutant2/sum(b3_S3_Mutant2)
b4_S3_Mutant2<-b4_S3_Mutant2/sum(b4_S3_Mutant2)
load("Mutant2_150.rdata")
setwd("~/Thymus/Workspace")
load("Mutant2_150.rdata")
load
load("Mutant2.rdata")
load("Mutant2_150.rdata")
setwd("~/Thymus/Datasets/Data with 11 cell types/Mutant2")
library(gplots)
msz=150  #matrix size in hist2d
cluster=4  #number of clusters produced for K means
txtfiles_Mutant2=list.files(pattern="*.txt")  #loads in order all files within folder
mat_Mutant2<-matrix(data=NA,nrow=22500,ncol=33) #this will change with size of matrix and # of sections/cell types
toFill_Mutant2<-as.data.frame(mat_Mutant2)  #changes to data frame
toUse0_Mutant2<-seq(1,33,1) #uses all 33 columns
toUse1_Mutant2<-seq(1,33,3) #uses columns that correspond to Section1
toUse2_Mutant2<-seq(2,33,3) #Section2
toUse3_Mutant2<-seq(3,33,3) #Section3
for(i in toUse0_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse0_Mutant2]
result_Mutant2->result0_Mutant2
}
for(i in toUse1_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse1_Mutant2]
result_Mutant2->result1_Mutant2
}
for(i in toUse2_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse2_Mutant2]
result_Mutant2->result2_Mutant2
}
for(i in toUse3_Mutant2){
tmp_Mutant2 = read.table(txtfiles_Mutant2[i], sep="\t", head=T)
X_Mutant2=tmp_Mutant2[[1]]  #[,1]
Y_Mutant2=tmp_Mutant2[[2]]
my.xy_Mutant2<-hist2d(X_Mutant2,Y_Mutant2,nbins=c(msz,msz))
obj_Mutant2 <- my.xy_Mutant2$counts
obj_Mutant2[1,1] = obj_Mutant2[1,1]-1
obj_Mutant2[150,1] = obj_Mutant2[150,1]-1
obj_Mutant2[1,150] = obj_Mutant2[1,150]-1
obj_Mutant2[150,150]=obj_Mutant2[150,150]-1
count_Mutant2<- as.vector(obj_Mutant2)
toFill_Mutant2[,i]<-count_Mutant2
result_Mutant2<-toFill_Mutant2[,toUse3_Mutant2]
result_Mutant2->result3_Mutant2   ###Section3
}
library (vegan)
library(labdsv)
spe.kmeans_All_Mutant2 <- kmeans(result0_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S1_Mutant2 <- kmeans(result1_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S2_Mutant2 <- kmeans(result2_Mutant2, centers=cluster, nstart=1000)
spe.kmeans_S3_Mutant2 <- kmeans(result3_Mutant2, centers=cluster, nstart=1000)
library(gplots) ###Call 1 set at a time; produces image of section
v0_Mutant2=spe.kmeans_All_Mutant2$cluster
v1_Mutant2=spe.kmeans_S1_Mutant2$cluster
v2_Mutant2=spe.kmeans_S2_Mutant2$cluster
v3_Mutant2=spe.kmeans_S3_Mutant2$cluster
#load("thymus.Rdata")
#image(v2) # make pic
v0.1_Mutant2=matrix(v0_Mutant2,nrow=150,ncol=150)
v1.1_Mutant2=matrix(v1_Mutant2,nrow=150,ncol=150)
v2.1_Mutant2=matrix(v2_Mutant2,nrow=150,ncol=150)
v3.1_Mutant2=matrix(v3_Mutant2,nrow=150,ncol=150)
heatmap.2( v1.1_Mutant2, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_Mutant2,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
save.image("Mutant2_150.rdata")
save.image("Mutant2_150.rdata")
