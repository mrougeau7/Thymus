#barplot(b2_S3_WT2-b3_S3_WT2,main="2-3")
barplot(b2_S3_WT2-b4_S3_WT2,main="2-4")
#barplot(b3_S3_WT2-b4_S3_WT2,main="3-4")
par(mfrow=c(2,2))  ##All
barplot(b1_WT2-b2_WT2,main="1-2")
barplot(b1_WT2-b3_WT2,main="1-3")
#barplot(b1_WT2-b4_WT2,main="1-4")
barplot(b2_WT2-b3_WT2,main="2-3")
#barplot(b2_WT2-b4_WT2,main="2-4")
#barplot(b3_WT2-b4_WT2,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S1_WT2-b2_S1_WT2,main="1-2")
barplot(b1_S1_WT2-b3_S1_WT2,main="1-3")
#barplot(b1_S1_WT2-b4_S1_WT2,main="1-4")
barplot(b2_S1_WT2-b3_S1_WT2,main="2-3")
#barplot(b2_S1_WT2-b4_S1_WT2,main="2-4")
#barplot(b3_S1_WT2-b4_S1_WT2,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S2_WT2-b2_S2_WT2,main="1-2")
barplot(b1_S2_WT2-b3_S2_WT2,main="1-3")
barplot(b1_S2_WT2-b4_S2_WT2,main="1-4")
#barplot(b2_S2_WT2-b3_S2_WT2,main="2-3")
#barplot(b2_S2_WT2-b4_S2_WT2,main="2-4")
barplot(b3_S2_WT2-b4_S2_WT2,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S3_WT2-b2_S3_WT2,main="1-2")
#barplot(b1_S3_WT2-b3_S3_WT2,main="1-3")
barplot(b1_S3_WT2-b4_S3_WT2,main="1-4")
#barplot(b2_S3_WT2-b3_S3_WT2,main="2-3")
barplot(b2_S3_WT2-b4_S3_WT2,main="2-4")
#barplot(b3_S3_WT2-b4_S3_WT2,main="3-4")
df_WT2<-result0_WT2[which(spe.kmeans_All_WT2$cluster==1),] %>% colSums() %>% t()   # example of chaining.
for (j in 2:4){
tmp_WT2<-result0_WT2[which(spe.kmeans_All_WT2$cluster==j),] %>% colSums() %>% t()
df_WT2<-rbind(df_WT2,tmp_WT2)
}
df_S1_WT2<-result1_WT2[which(spe.kmeans_S1_WT2$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S1_WT2<-result1_WT2[which(spe.kmeans_S1_WT2$cluster==j),] %>% colSums() %>% t()
df_S1_WT2<-rbind(df_S1_WT2,tmp_S1_WT2)
}
df_S2_WT2<-result2_WT2[which(spe.kmeans_S1_WT2$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S2_WT2<-result2_WT2[which(spe.kmeans_S1_WT2$cluster==j),] %>% colSums() %>% t()
df_S1_WT2<-rbind(df_S1_WT2,tmp_S1_WT2)
}
df_S3_WT2<-result3_WT2[which(spe.kmeans_S3_WT2$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S3_WT2<-result3_WT2[which(spe.kmeans_S3_WT2$cluster==j),] %>% colSums() %>% t()
df_S3_WT2<-rbind(df_S3_WT2,tmp_S3_WT2)
}
#need same number of columns to bind them.
#colnames(df2_WT2)<-colnames(df_WT2)
colnames(df_S2_WT2)=colnames(df_S1_WT2)
colnames(df_S3_WT2)<-colnames(df_S1_WT2)
#df_WT2<-apply(df_WT2,2,as.integer) %>% as.data.frame()
#df_S1_WT2<-apply(df_S1_WT2,2,as.integer) %>% as.data.frame()
#df_S2_WT2<-apply(df_S2_WT2,2,as.integer) %>% as.data.frame()
#df_S3_WT2<-apply(df_S3_WT2,2,as.integer) %>% as.data.frame()
#dfTOTAL<-rbind(df_S1_WT2,df_S2_WT2, df_S3_WT2, df_S1_WT2, df_S2_WT2, df_S3_WT3, df_S1_Mutant1,
#df_S2_Mutant1, df_S3_Mutant1, df_S1_WT2, df_S2_WT2, df_S3_Mutant3)
dfT_WT2=rbind(df_S1_WT2,df_S2_WT2,df_S3_WT2)
BrayCurtis_WT2<-vegdist(dfT_WT2,method="bray")
#print(BrayCurtis)
hc_WT2<-hclust(BrayCurtis_WT2)
#plot(hc,labels=dfT$rownames)
save.image("WT2_150.rdata")
BrayCurtis_WT2
load("Mutant1_Rarefaction_150.rdata")
heatmap.2( v0.1_Mutant1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_Mutant1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v1.1_Mutant1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_Mutant1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_Mutant1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_Mutant1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_Mutant1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_Mutant1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_Mutant1$cluster)){
barplot(colSums(result0_Mutant1[which(spe.kmeans_All_Mutant1$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_Mutant1_R$cluster)){
barplot(colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_Mutant1_R$cluster)){
barplot(colSums(result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==i),]),main=i,ylim=c(0,11500))
#we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S2_Mutant1_R$cluster)){
barplot(colSums(result2_Mutant1_R[which(spe.kmeans_S2_Mutant1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_Mutant1_R$cluster)){
barplot(colSums(result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
b1_Mutant1_R<-colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==1),])
b1_Mutant1_R<-colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==1),])
b2_Mutant1_R<-colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==2),])
b3_Mutant1_R<-colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==3),])
b4_Mutant1_R<-colSums(result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==4),])
b1_S1_Mutant1_R<-colSums(result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==1),])
b2_S1_Mutant1_R<-colSums(result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==2),])
b3_S1_Mutant1_R<-colSums(result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==3),])
b4_S1_Mutant1_R<-colSums(result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==4),])
b1_S2_Mutant1_R<-colSums(result2_Mutant1_R[which(spe.kmeans_S2_Mutant1_R$cluster==1),])
b2_S2_Mutant1_R<-colSums(result2_Mutant1_R[which(spe.kmeans_S2_Mutant1_R$cluster==2),])
b3_S2_Mutant1_R<-colSums(result2_Mutant1_R[which(spe.kmeans_S2_Mutant1_R$cluster==3),])
b4_S2_Mutant1_R<-colSums(result2_Mutant1_R[which(spe.kmeans_S2_Mutant1_R$cluster==4),])
b1_S3_Mutant1_R<-colSums(result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==1),])
b2_S3_Mutant1_R<-colSums(result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==2),])
b3_S3_Mutant1_R<-colSums(result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==3),])
b4_S3_Mutant1_R<-colSums(result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==4),])
par(mfrow=c(2,2))  ##All
#barplot(b1_Mutant1_R-b2_Mutant1_R,main="1-2")
#barplot(b1_Mutant1_R-b3_Mutant1_R,main="1-3")
#barplot(b1_Mutant1_R-b4_Mutant1_R,main="1-4")
barplot(b2_Mutant1_R-b3_Mutant1_R,main="2-3")
barplot(b2_Mutant1_R-b4_Mutant1_R,main="2-4")
barplot(b3_Mutant1_R-b4_Mutant1_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S1_Mutant1_R-b2_S1_Mutant1_R,main="1-2")
barplot(b1_S1_Mutant1_R-b3_S1_Mutant1_R,main="1-3")
barplot(b1_S1_Mutant1_R-b4_S1_Mutant1_R,main="1-4")
#barplot(b2_S1_Mutant1_R-b3_S1_Mutant1_R,main="2-3")
#barplot(b2_S1_Mutant1_R-b4_S1_Mutant1_R,main="2-4")
barplot(b3_S1_Mutant1_R-b4_S1_Mutant1_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S2_Mutant1_R-b2_S2_Mutant1_R,main="1-2")
#barplot(b1_S2_Mutant1_R-b3_S2_Mutant1_R,main="1-3")
#barplot(b1_S2_Mutant1_R-b4_S2_Mutant1_R,main="1-4")
barplot(b2_S2_Mutant1_R-b3_S2_Mutant1_R,main="2-3")
barplot(b2_S2_Mutant1_R-b4_S2_Mutant1_R,main="2-4")
barplot(b3_S2_Mutant1_R-b4_S2_Mutant1_R,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S3_Mutant1_R-b2_S3_Mutant1_R,main="1-2")
#barplot(b1_S3_Mutant1_R-b3_S3_Mutant1_R,main="1-3")
barplot(b1_S3_Mutant1_R-b4_S3_Mutant1_R,main="1-4")
#barplot(b2_S3_Mutant1_R-b3_S3_Mutant1_R,main="2-3")
barplot(b2_S3_Mutant1_R-b4_S3_Mutant1_R,main="2-4")
#barplot(b3_S3_Mutant1_R-b4_S3_Mutant1_R,main="3-4")
df_Mutant1_R<-result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==1),] %>% colSums() %>% t()   # example of chaining.
for (j in 2:4){
tmp_Mutant1_R<-result0_Mutant1_R[which(spe.kmeans_All_Mutant1_R$cluster==j),] %>% colSums() %>% t()
df_Mutant1_R<-rbind(df_Mutant1_R,tmp_Mutant1_R)
}
df_S1_Mutant1_R<-result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S1_Mutant1_R<-result1_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==j),] %>% colSums() %>% t()
df_S1_Mutant1_R<-rbind(df_S1_Mutant1_R,tmp_S1_Mutant1_R)
}
df_S2_Mutant1_R<-result2_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S2_Mutant1_R<-result2_Mutant1_R[which(spe.kmeans_S1_Mutant1_R$cluster==j),] %>% colSums() %>% t()
df_S1_Mutant1_R<-rbind(df_S1_Mutant1_R,tmp_S1_Mutant1_R)
}
df_S3_Mutant1_R<-result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S3_Mutant1_R<-result3_Mutant1_R[which(spe.kmeans_S3_Mutant1_R$cluster==j),] %>% colSums() %>% t()
df_S3_Mutant1_R<-rbind(df_S3_Mutant1_R,tmp_S3_Mutant1_R)
}
#need same number of columns to bind them.
#colnames(df2_Mutant1_R)<-colnames(df_Mutant1_R)
colnames(df_S2_Mutant1_R)=colnames(df_S1_Mutant1_R)
colnames(df_S3_Mutant1_R)<-colnames(df_S1_Mutant1_R)
#df_Mutant1_R<-apply(df_Mutant1_R,2,as.integer) %>% as.data.frame()
#df_S1_Mutant1_R<-apply(df_S1_Mutant1_R,2,as.integer) %>% as.data.frame()
#df_S2_Mutant1_R<-apply(df_S2_Mutant1_R,2,as.integer) %>% as.data.frame()
#df_S3_Mutant1_R<-apply(df_S3_Mutant1_R,2,as.integer) %>% as.data.frame()
dfT_Mutant1_R=rbind(df_S1_Mutant1_R,df_S2_Mutant1_R,df_S3_Mutant1_R)
BrayCurtis_Mutant1_R<-vegdist(dfT_Mutant1_R,method="bray")
#print(BrayCurtis)
hc_Mutant1_R<-hclust(BrayCurtis_Mutant1_R)
#plot(hc,labels=dfT$rownames)
plot(hc_Mutant1_R)
save.image("Mutant1_Rarefaction_150.rdata")
BrayCurtis_Mutant1_R
load("WT1_Rarefaction_150.rdata")
heatmap.2( v0.1_WT1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_WT1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v1.1_WT1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_WT1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_WT1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_WT1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_WT1_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_WT1_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_WT1_R$cluster)){
barplot(colSums(result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_WT1_R$cluster)){
barplot(colSums(result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==i),]),main=i,ylim=c(0,11500))
#we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S2_WT1_R$cluster)){
barplot(colSums(result2_WT1_R[which(spe.kmeans_S2_WT1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_WT1_R$cluster)){
barplot(colSums(result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
b1_WT1_R<-colSums(result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==1),])
b2_WT1_R<-colSums(result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==2),])
b3_WT1_R<-colSums(result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==3),])
b4_WT1_R<-colSums(result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==4),])
b1_S1_WT1_R<-colSums(result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==1),])
b2_S1_WT1_R<-colSums(result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==2),])
b3_S1_WT1_R<-colSums(result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==3),])
b4_S1_WT1_R<-colSums(result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==4),])
b1_S2_WT1_R<-colSums(result2_WT1_R[which(spe.kmeans_S2_WT1_R$cluster==1),])
b2_S2_WT1_R<-colSums(result2_WT1_R[which(spe.kmeans_S2_WT1_R$cluster==2),])
b3_S2_WT1_R<-colSums(result2_WT1_R[which(spe.kmeans_S2_WT1_R$cluster==3),])
b4_S2_WT1_R<-colSums(result2_WT1_R[which(spe.kmeans_S2_WT1_R$cluster==4),])
b1_S3_WT1_R<-colSums(result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==1),])
b2_S3_WT1_R<-colSums(result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==2),])
b3_S3_WT1_R<-colSums(result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==3),])
b4_S3_WT1_R<-colSums(result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==4),])
par(mfrow=c(2,2))  ##All
barplot(b1_WT1_R-b2_WT1_R,main="1-2")
#barplot(b1_WT1_R-b3_WT1_R,main="1-3")
barplot(b1_WT1_R-b4_WT1_R,main="1-4")
#barplot(b2_WT1_R-b3_WT1_R,main="2-3")
barplot(b2_WT1_R-b4_WT1_R,main="2-4")
#barplot(b3_WT1_R-b4_WT1_R,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S1_WT1_R-b2_S1_WT1_R,main="1-2")
#barplot(b1_S1_WT1_R-b3_S1_WT1_R,main="1-3")
barplot(b1_S1_WT1_R-b4_S1_WT1_R,main="1-4")
#barplot(b2_S1_WT1_R-b3_S1_WT1_R,main="2-3")
barplot(b2_S1_WT1_R-b4_S1_WT1_R,main="2-4")
#barplot(b3_S1_WT1_R-b4_S1_WT1_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S2_WT1_R-b2_S2_WT1_R,main="1-2")
barplot(b1_S2_WT1_R-b3_S2_WT1_R,main="1-3")
barplot(b1_S2_WT1_R-b4_S2_WT1_R,main="1-4")
#barplot(b2_S2_WT1_R-b3_S2_WT1_R,main="2-3")
#barplot(b2_S2_WT1_R-b4_S2_WT1_R,main="2-4")
barplot(b3_S2_WT1_R-b4_S2_WT1_R,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S3_WT1_R-b2_S3_WT1_R,main="1-2")
#barplot(b1_S3_WT1_R-b3_S3_WT1_R,main="1-3")
barplot(b1_S3_WT1_R-b4_S3_WT1_R,main="1-4")
#barplot(b2_S3_WT1_R-b3_S3_WT1_R,main="2-3")
barplot(b2_S3_WT1_R-b4_S3_WT1_R,main="2-4")
#barplot(b3_S3_WT1_R-b4_S3_WT1_R,main="3-4")
df_WT1_R<-result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==1),] %>% colSums() %>% t()   # example of chaining.
for (j in 2:4){
tmp_WT1_R<-result0_WT1_R[which(spe.kmeans_All_WT1_R$cluster==j),] %>% colSums() %>% t()
df_WT1_R<-rbind(df_WT1_R,tmp_WT1_R)
}
df_S1_WT1_R<-result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S1_WT1_R<-result1_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==j),] %>% colSums() %>% t()
df_S1_WT1_R<-rbind(df_S1_WT1_R,tmp_S1_WT1_R)
}
df_S2_WT1_R<-result2_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S2_WT1_R<-result2_WT1_R[which(spe.kmeans_S1_WT1_R$cluster==j),] %>% colSums() %>% t()
df_S1_WT1_R<-rbind(df_S1_WT1_R,tmp_S1_WT1_R)
}
df_S3_WT1_R<-result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S3_WT1_R<-result3_WT1_R[which(spe.kmeans_S3_WT1_R$cluster==j),] %>% colSums() %>% t()
df_S3_WT1_R<-rbind(df_S3_WT1_R,tmp_S3_WT1_R)
}
#need same number of columns to bind them.
#colnames(df2_WT1_R)<-colnames(df_WT1_R)
colnames(df_S2_WT1_R)=colnames(df_S1_WT1_R)
colnames(df_S3_WT1_R)<-colnames(df_S1_WT1_R)
dfT_WT1_R=rbind(df_S1_WT1_R,df_S2_WT1_R,df_S3_WT1_R)
BrayCurtis_WT1_R<-vegdist(dfT_WT1_R,method="bray")
#print(BrayCurtis)
hc_WT1_R<-hclust(BrayCurtis_WT1_R
#plot(hc_WT1_R,labels=dfT$rownames)
plot(hc_WT1_R)
hc_WT1_R<-hclust(BrayCurtis_WT1_R)
save.image("WT1_Rarefaction_150.rdata")
load("Mutant2_Rarefaction_150.rdata")
heatmap.2( v0.1_Mutant2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_Mutant2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v1.1_Mutant2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_Mutant2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_Mutant2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_Mutant2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_Mutant2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_Mutant2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_Mutant2$cluster)){
barplot(colSums(result0_Mutant2[which(spe.kmeans_All_Mutant2$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_Mutant2_R$cluster)){
barplot(colSums(result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_Mutant2_R$cluster)){
barplot(colSums(result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==i),]),main=i,ylim=c(0,11500))
#we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S2_Mutant2_R$cluster)){
barplot(colSums(result2_Mutant2_R[which(spe.kmeans_S2_Mutant2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_Mutant2_R$cluster)){
barplot(colSums(result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
b1_Mutant2_R<-colSums(result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==1),])
b2_Mutant2_R<-colSums(result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==2),])
b3_Mutant2_R<-colSums(result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==3),])
b4_Mutant2_R<-colSums(result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==4),])
b1_S1_Mutant2_R<-colSums(result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==1),])
b2_S1_Mutant2_R<-colSums(result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==2),])
b3_S1_Mutant2_R<-colSums(result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==3),])
b4_S1_Mutant2_R<-colSums(result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==4),])
b1_S2_Mutant2_R<-colSums(result2_Mutant2_R[which(spe.kmeans_S2_Mutant2_R$cluster==1),])
b2_S2_Mutant2_R<-colSums(result2_Mutant2_R[which(spe.kmeans_S2_Mutant2_R$cluster==2),])
b3_S2_Mutant2_R<-colSums(result2_Mutant2_R[which(spe.kmeans_S2_Mutant2_R$cluster==3),])
b4_S2_Mutant2_R<-colSums(result2_Mutant2_R[which(spe.kmeans_S2_Mutant2_R$cluster==4),])
b1_S3_Mutant2_R<-colSums(result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==1),])
b2_S3_Mutant2_R<-colSums(result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==2),])
b3_S3_Mutant2_R<-colSums(result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==3),])
b4_S3_Mutant2_R<-colSums(result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==4),])
###and normalize these so that each cluster type has the same total amount of cells (in other words, we're ###getting the proportion of cell types in each cluster)
b1_Mutant2_R<-b1_Mutant2_R/sum(b1_Mutant2_R)
b2_Mutant2_R<-b2_Mutant2_R/sum(b2_Mutant2_R)
b3_Mutant2_R<-b3_Mutant2_R/sum(b3_Mutant2_R)
b4_Mutant2_R<-b4_Mutant2_R/sum(b4_Mutant2_R)
b1_S1_Mutant2_R<-b1_S1_Mutant2_R/sum(b1_S1_Mutant2_R)
b2_S1_Mutant2_R<-b2_S1_Mutant2_R/sum(b2_S1_Mutant2_R)
b3_S1_Mutant2_R<-b3_S1_Mutant2_R/sum(b3_S1_Mutant2_R)
b4_S1_Mutant2_R<-b4_S1_Mutant2_R/sum(b4_S1_Mutant2_R)
b1_S2_Mutant2_R<-b1_S2_Mutant2_R/sum(b1_S2_Mutant2_R)
b2_S2_Mutant2_R<-b2_S2_Mutant2_R/sum(b2_S2_Mutant2_R)
b3_S2_Mutant2_R<-b3_S2_Mutant2_R/sum(b3_S2_Mutant2_R)
b4_S2_Mutant2_R<-b4_S2_Mutant2_R/sum(b4_S2_Mutant2_R)
b1_S3_Mutant2_R<-b1_S3_Mutant2_R/sum(b1_S3_Mutant2_R)
b2_S3_Mutant2_R<-b2_S3_Mutant2_R/sum(b2_S3_Mutant2_R)
b3_S3_Mutant2_R<-b3_S3_Mutant2_R/sum(b3_S3_Mutant2_R)
b4_S3_Mutant2_R<-b4_S3_Mutant2_R/sum(b4_S3_Mutant2_R)
par(mfrow=c(2,2))  ##All
#barplot(b1_Mutant2_R-b2_Mutant2_R,main="1-2")
#barplot(b1_Mutant2_R-b3_Mutant2_R,main="1-3")
#barplot(b1_Mutant2_R-b4_Mutant2_R,main="1-4")
barplot(b2_Mutant2_R-b3_Mutant2_R,main="2-3")
barplot(b2_Mutant2_R-b4_Mutant2_R,main="2-4")
barplot(b3_Mutant2_R-b4_Mutant2_R,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S1_Mutant2_R-b2_S1_Mutant2_R,main="1-2")
#barplot(b1_S1_Mutant2_R-b3_S1_Mutant2_R,main="1-3")
barplot(b1_S1_Mutant2_R-b4_S1_Mutant2_R,main="1-4")
#barplot(b2_S1_Mutant2_R-b3_S1_Mutant2_R,main="2-3")
barplot(b2_S1_Mutant2_R-b4_S1_Mutant2_R,main="2-4")
#barplot(b3_S1_Mutant2_R-b4_S1_Mutant2_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S2_Mutant2_R-b2_S2_Mutant2_R,main="1-2")
#barplot(b1_S2_Mutant2_R-b3_S2_Mutant2_R,main="1-3")
#barplot(b1_S2_Mutant2_R-b4_S2_Mutant2_R,main="1-4")
barplot(b2_S2_Mutant2_R-b3_S2_Mutant2_R,main="2-3")
barplot(b2_S2_Mutant2_R-b4_S2_Mutant2_R,main="2-4")
barplot(b3_S2_Mutant2_R-b4_S2_Mutant2_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S3_Mutant2_R-b2_S3_Mutant2_R,main="1-2")
#barplot(b1_S3_Mutant2_R-b3_S3_Mutant2_R,main="1-3")
#barplot(b1_S3_Mutant2_R-b4_S3_Mutant2_R,main="1-4")
barplot(b2_S3_Mutant2_R-b3_S3_Mutant2_R,main="2-3")
barplot(b2_S3_Mutant2_R-b4_S3_Mutant2_R,main="2-4")
barplot(b3_S3_Mutant2_R-b4_S3_Mutant2_R,main="3-4")
library(vegan)
library(dplyr) # used for chaining and manipulation
# http://blog.rstudio.org/2014/01/17/introducing-dplyr/
#reads as: take only cluster 1 data from 'spe', then take column sums (i.e. total cell type count)
#then transpose (swap rows/cols needed for bray curtis calc)
df_Mutant2_R<-result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==1),] %>% colSums() %>% t()   # example of chaining.
for (j in 2:4){
tmp_Mutant2_R<-result0_Mutant2_R[which(spe.kmeans_All_Mutant2_R$cluster==j),] %>% colSums() %>% t()
df_Mutant2_R<-rbind(df_Mutant2_R,tmp_Mutant2_R)
}
df_S1_Mutant2_R<-result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S1_Mutant2_R<-result1_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==j),] %>% colSums() %>% t()
df_S1_Mutant2_R<-rbind(df_S1_Mutant2_R,tmp_S1_Mutant2_R)
}
df_S2_Mutant2_R<-result2_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S2_Mutant2_R<-result2_Mutant2_R[which(spe.kmeans_S1_Mutant2_R$cluster==j),] %>% colSums() %>% t()
df_S1_Mutant2_R<-rbind(df_S1_Mutant2_R,tmp_S1_Mutant2_R)
}
df_S3_Mutant2_R<-result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==1),] %>% colSums() %>% t()
for (j in 2:4){
tmp_S3_Mutant2_R<-result3_Mutant2_R[which(spe.kmeans_S3_Mutant2_R$cluster==j),] %>% colSums() %>% t()
df_S3_Mutant2_R<-rbind(df_S3_Mutant2_R,tmp_S3_Mutant2_R)
}
#need same number of columns to bind them.
#colnames(df2_Mutant2_R)<-colnames(df_Mutant2_R)
colnames(df_S2_Mutant2_R)=colnames(df_S1_Mutant2_R)
colnames(df_S3_Mutant2_R)<-colnames(df_S1_Mutant2_R)
dfT_Mutant2_R=rbind(df_S1_Mutant2_R,df_S2_Mutant2_R,df_S3_Mutant2_R)
BrayCurtis_Mutant2_R<-vegdist(dfT_Mutant2_R,method="bray")
#print(BrayCurtis)
hc_Mutant2_R<-hclust(BrayCurtis_Mutant2_R)
save.image("Mutant2_R_Rarefaction_150.rdata")
BrayCurtis_Mutant2_R
load("WT2_Rarefaction_150.rdata")
heatmap.2( v0.1_WT2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v0.1_WT2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v1.1_WT2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v1.1_WT2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v2.1_WT2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v2.1_WT2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
heatmap.2( v3.1_WT2_R, Rowv=FALSE, Colv=FALSE, dendrogram='none', cellnote=v3.1_WT2_R,
notecol="black", trace='none', key=FALSE,lwid = c(.01,0.99),lhei = c(.01,.99),
margins = c(0,0),col=c("red", "yellow", "blue", "green"))
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_All_WT2_R$cluster)){
barplot(colSums(result0_WT2_R[which(spe.kmeans_All_WT2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S1_WT2_R$cluster)){
barplot(colSums(result1_WT2_R[which(spe.kmeans_S1_WT2_R$cluster==i),]),main=i,ylim=c(0,11500))
#we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S2_WT2_R$cluster)){
barplot(colSums(result2_WT2_R[which(spe.kmeans_S2_WT2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
my.order<-c(1,2,3,4) # define the order we want to plot panels
par(mfrow=c(2,2)) # make 4 subplots in 2x2 style
for (i in 1:max(spe.kmeans_S3_WT2_R$cluster)){
barplot(colSums(result3_WT2_R[which(spe.kmeans_S3_WT2_R$cluster==i),]),main=i,ylim=c(0,11500))
# we pick out desired cluster and plot
}
par(mfrow=c(2,2))  ##All
barplot(b1_WT2_R-b2_WT2_R,main="1-2")
#barplot(b1_WT2_R-b3_WT2_R,main="1-3")
barplot(b1_WT2_R-b4_WT2_R,main="1-4")
#barplot(b2_WT2_R-b3_WT2_R,main="2-3")
barplot(b2_WT2_R-b4_WT2_R,main="2-4")
#barplot(b3_WT2_R-b4_WT2_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S1_WT2_R-b2_S1_WT2_R,main="1-2")
#barplot(b1_S1_WT2_R-b3_S1_WT2_R,main="1-3")
#barplot(b1_S1_WT2_R-b4_S1_WT2_R,main="1-4")
barplot(b2_S1_WT2_R-b3_S1_WT2_R,main="2-3")
barplot(b2_S1_WT2_R-b4_S1_WT2_R,main="2-4")
barplot(b3_S1_WT2_R-b4_S1_WT2_R,main="3-4")
par(mfrow=c(2,2))
#barplot(b1_S2_WT2_R-b2_S2_WT2_R,main="1-2")
#barplot(b1_S2_WT2_R-b3_S2_WT2_R,main="1-3")
#barplot(b1_S2_WT2_R-b4_S2_WT2_R,main="1-4")
barplot(b2_S2_WT2_R-b3_S2_WT2_R,main="2-3")
barplot(b2_S2_WT2_R-b4_S2_WT2_R,main="2-4")
barplot(b3_S2_WT2_R-b4_S2_WT2_R,main="3-4")
par(mfrow=c(2,2))
barplot(b1_S3_WT2_R-b2_S3_WT2_R,main="1-2")
#barplot(b1_S3_WT2_R-b3_S3_WT2_R,main="1-3")
barplot(b1_S3_WT2_R-b4_S3_WT2_R,main="1-4")
#barplot(b2_S3_WT2_R-b3_S3_WT2_R,main="2-3")
barplot(b2_S3_WT2_R-b4_S3_WT2_R,main="2-4")
#barplot(b3_S3_WT2_R-b4_S3_WT2_R,main="3-4")
BrayCurtis_WT_2
BrayCurtis_WT2_R
